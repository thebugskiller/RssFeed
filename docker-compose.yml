version: '3.2'

services:
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/server-entrypoint.sh
        ports:
            - "8000:8000"  
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            SECRET_KEY: "django-insecure-rjb&3%a(59s^eiihr9h6cdt=t*nmls(f-jq%dx_$*883^p+y6l"
            FEED_URL: "https://rss.nytimes.com/services/xml/rss/nyt/Technology.xml"
            ALLOWED_HOSTS: "localhost,127.0.0.1"
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_HOST: postgres
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/admin/login/"]
            interval: 30s
            timeout: 10s
            retries: 5
        depends_on:
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/worker-entrypoint.sh
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            SECRET_KEY: "django-insecure-rjb&3%a(59s^eiihr9h6cdt=t*nmls(f-jq%dx_$*883^p+y6l"
            FEED_URL: "https://rss.nytimes.com/services/xml/rss/nyt/Technology.xml"
            ALLOWED_HOSTS: "localhost,127.0.0.1"
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_HOST: postgres
        depends_on:
            redis:
                condition: service_healthy
            server:
                condition: service_healthy
    beat:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/beat-entrypoint.sh
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            SECRET_KEY: "django-insecure-rjb&3%a(59s^eiihr9h6cdt=t*nmls(f-jq%dx_$*883^p+y6l"
            FEED_URL: "https://rss.nytimes.com/services/xml/rss/nyt/Technology.xml"
            ALLOWED_HOSTS: "localhost,127.0.0.1"
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_HOST: postgres
        depends_on:
            redis:
                condition: service_healthy
            worker:
                condition: service_started
            server:
                condition: service_healthy
    postgres:
        image: postgres:14.1-alpine
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - '5432:5432'
        volumes:
            - postgres_volume:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine 
        expose:
            - 6379
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 5
    frontend:
        build:
            context: .
            dockerfile: ./docker/frontend/Dockerfile
        ports:
            - "3000:3000"
        environment:
            REACT_APP_API_URL: "http://localhost:8000/api/rss-feed/"
        depends_on:
            server:
                condition: service_started

volumes:
    static_volume: {}
    postgres_volume:
        name: postgres_volume
